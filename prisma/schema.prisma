generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addresses {
  id           String   @id
  street       String
  number       String
  complement   String?
  neighborhood String
  city         String
  state        String
  zipCode      String
  isDefault    Boolean  @default(false)
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  users        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model categories {
  id          String     @id
  name        String
  description String
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  products    products[]
}

model DeliverySettings {
  id                   String       @id
  storeStreet          String
  storeNumber          String
  storeComplement      String?
  storeNeighborhood    String
  storeCity            String
  storeState           String
  storeZipCode         String
  deliveryType         DeliveryType @default(FIXED)
  fixedCost            Float        @default(0)
  costPerKm            Float        @default(0)
  freeDeliveryMinValue Float?
  allowPickup          Boolean      @default(true)
  isActive             Boolean      @default(true)
  createdAt            DateTime     @default(now())
  updatedAt            DateTime

  @@map("delivery_settings")
}

model order_items {
  id        String   @id
  quantity  Int
  price     Float
  orderId   String
  productId String
  createdAt DateTime @default(now())
  orders    orders   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  products  products @relation(fields: [productId], references: [id])
}

model orders {
  id                   String        @id
  orderType            OrderType     @default(DELIVERY)
  status               OrderStatus   @default(PENDING)
  customerName         String
  customerEmail        String
  customerPhone        String
  deliveryStreet       String?
  deliveryNumber       String?
  deliveryComplement   String?
  deliveryNeighborhood String?
  deliveryCity         String?
  deliveryState        String?
  deliveryZipCode      String?
  deliveryFee          Float         @default(0)
  tableId              String?
  includeService       Boolean       @default(false)
  serviceFee           Float         @default(0)
  subtotal             Float
  total                Float
  notes                String?
  userId               String?
  createdAt            DateTime      @default(now())
  updatedAt            DateTime
  order_items          order_items[]
  tables               tables?       @relation(fields: [tableId], references: [id])
  users                users?        @relation(fields: [userId], references: [id])
  payments             payments[]
}

model payments {
  id            String        @id
  amount        Float
  paymentMethod PaymentMethod
  notes         String?
  isPaid        Boolean       @default(true)
  orderId       String
  createdAt     DateTime      @default(now())
  orders        orders        @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model products {
  id            String        @id
  name          String
  description   String
  price         Float
  image         String
  isAvailable   Boolean       @default(true)
  ingredients   String[]
  calories      Int
  proteins      Float
  carbohydrates Float
  fats          Float
  fiber         Float
  categoryId    String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  order_items   order_items[]
  categories    categories    @relation(fields: [categoryId], references: [id])
}

model restaurant_settings {
  id                String    @id
  name              String
  street            String
  number            String
  complement        String?
  neighborhood      String
  city              String
  state             String
  zipCode           String
  storeType         StoreType @default(HYBRID)
  operatingHours    Json
  phone             String?
  email             String?
  deliveryFee       Float     @default(0)
  minDeliveryValue  Float     @default(0)
  serviceFeePercent Float     @default(10)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime
}

model tables {
  id        String   @id
  number    Int      @unique
  capacity  Int
  location  String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
  orders    orders[]
}

model users {
  id        String      @id
  name      String
  email     String      @unique
  phone     String?
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime
  addresses addresses[]
  orders    orders[]
}

enum DeliveryType {
  FIXED
  VARIABLE
  FIXED_PLUS_KM
  FREE_ABOVE_VALUE
}

enum OrderStatus {
  PENDING
  PREPARING
  READY
  DELIVERED
  CANCELLED
}

enum OrderType {
  DELIVERY
  DINE_IN
}

enum PaymentMethod {
  PIX
  CREDIT_CARD
  DEBIT_CARD
  CASH
}

enum StoreType {
  DELIVERY_ONLY
  DINE_IN_ONLY
  HYBRID
}
